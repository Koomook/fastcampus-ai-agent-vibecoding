[project]
name = "data-go-mcp-servers"
version = "0.1.0"
description = "Collection of MCP servers for Korea public data APIs (data.go.kr)"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}

[tool.uv.workspace]
members = ["src/*"]

[dependency-groups]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.9.7",
    "pyright>=1.1.398",
    "pre-commit>=4.1.0",
    "cookiecutter>=2.6.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["scripts"]

[tool.ruff]
line-length = 99
extend-include = ["*.ipynb"]
exclude = [
    ".venv",
    "**/__pycache__",
    "**/node_modules",
    "**/dist",
    "**/build",
    "**/env",
    "**/.ruff_cache",
    "**/.venv",
    "**/.ipynb_checkpoints"
]
force-exclude = true

[tool.ruff.lint]
exclude = ["__init__.py"]
select = ["C", "D", "E", "F", "I", "W"]
ignore = ["C901", "E501", "E741", "F402", "F823", "D100", "D106"]

[tool.ruff.lint.isort]
lines-after-imports = 2
no-sections = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.pytest.ini_options]
testpaths = ["tests", "src/*/tests"]
asyncio_mode = "auto"
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_default_fixture_loop_scope = "function"